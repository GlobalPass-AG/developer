"use strict";(self.webpackChunkglobalpass_docs=self.webpackChunkglobalpass_docs||[]).push([[285],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var d=a.createContext({}),s=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),c=s(n),u=l,k=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(k,r(r({ref:t},p),{},{components:n})):a.createElement(k,r({ref:t},p))}));function k(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o[c]="string"==typeof e?e:l,r[1]=o;for(var s=2;s<i;s++)r[s]=n[s];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},6877:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>o,toc:()=>s});var a=n(7462),l=(n(7294),n(3905));const i={hide_table_of_contents:!0},r="Native",o={unversionedId:"android-sdk/native",id:"android-sdk/native",title:"Native",description:"Latest GlobalPass Android SDK version: 1.2.17",source:"@site/docs/android-sdk/native.md",sourceDirName:"android-sdk",slug:"/android-sdk/native",permalink:"/android-sdk/native",draft:!1,tags:[],version:"current",frontMatter:{hide_table_of_contents:!0},sidebar:"androidSdkSidebar",previous:{title:"Flutter",permalink:"/android-sdk/flutter"},next:{title:"React Native",permalink:"/android-sdk/react-native/"}},d={},s=[{value:"1. Connect GlobalPass SDK",id:"1-connect-globalpass-sdk",level:2},{value:"a. Add this code to the Project level <em>build.gradle</em> file under <code>allprojects -&gt; repositories</code> section:",id:"a-add-this-code-to-the-project-level-buildgradle-file-under-allprojects---repositories-section",level:3},{value:"b. Add this code to the App level <em>build.gradle</em> file under <code>dependencies</code>:",id:"b-add-this-code-to-the-app-level-buildgradle-file-under-dependencies",level:3},{value:"c. Sync gradle",id:"c-sync-gradle",level:3},{value:"2. KYC",id:"2-kyc",level:2},{value:"a. Initialize SDK in onCreate() Activity or in onCreateView() Fragment:",id:"a-initialize-sdk-in-oncreate-activity-or-in-oncreateview-fragment",level:3},{value:"b. Start KYC flow by calling <code>start()</code> function:",id:"b-start-kyc-flow-by-calling-start-function",level:3},{value:"3. Instant Biometrics",id:"3-instant-biometrics",level:2},{value:"a. Initialize SDK in onCreate() Activity or in onCreateView() Fragment:",id:"a-initialize-sdk-in-oncreate-activity-or-in-oncreateview-fragment-1",level:3},{value:"b. Start Instant Biometrics flow by calling <code>start()</code> function:",id:"b-start-instant-biometrics-flow-by-calling-start-function",level:3},{value:"4. Additional optional parameters in <code>start()</code> function:",id:"4-additional-optional-parameters-in-start-function",level:2},{value:"<code>enableFileLogger</code>",id:"enablefilelogger",level:3},{value:"<code>widgetMode</code>",id:"widgetmode",level:3},{value:"<code>externalId</code>",id:"externalid",level:3},{value:"<code>languageCode</code>",id:"languagecode",level:3}],p={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,l.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"native"},"Native"),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"Latest GlobalPass Android SDK version: ",(0,l.kt)("strong",{parentName:"p"},"1.2.17"))),(0,l.kt)("h2",{id:"1-connect-globalpass-sdk"},"1. Connect GlobalPass SDK"),(0,l.kt)("h3",{id:"a-add-this-code-to-the-project-level-buildgradle-file-under-allprojects---repositories-section"},"a. Add this code to the Project level ",(0,l.kt)("em",{parentName:"h3"},"build.gradle")," file under ",(0,l.kt)("inlineCode",{parentName:"h3"},"allprojects -> repositories")," section:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gradle",metastring:'title="build.gradle"',title:'"build.gradle"'},"/* GlobalPass SDK Maven Repository */\nmaven {\n    url 'https://pkgs.dev.azure.com/isun-ag/GlobalPassApp-Public/_packaging/GlobalPassAndroidSDK/maven/v1'\n}\n\n/* FaceTec SDK Maven Private Repository */\nmaven {\n    url 'https://pkgs.dev.azure.com/isun-ag/GlobalPassApp/_packaging/facetecandroid/maven/v1'\n    name 'facetecandroid'\n    credentials {\n        username \"isun-ag\"\n        password \"<token>\"\n    }\n}\n")),(0,l.kt)("admonition",{type:"info"},(0,l.kt)("p",{parentName:"admonition"},"To get a <token",">"," value used above, please contact ",(0,l.kt)("strong",{parentName:"p"},"GlobalPass")," support.")),(0,l.kt)("h3",{id:"b-add-this-code-to-the-app-level-buildgradle-file-under-dependencies"},"b. Add this code to the App level ",(0,l.kt)("em",{parentName:"h3"},"build.gradle")," file under ",(0,l.kt)("inlineCode",{parentName:"h3"},"dependencies"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-gradle",metastring:'title="build.gradle"',title:'"build.gradle"'},"implementation 'ch.globalpass.sdk:release:1.2.17'\n")),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"Sometimes dependencies cannot be loaded in the project. In this case, add the following plugin in the App level ",(0,l.kt)("em",{parentName:"p"},"build.gradle")," file under ",(0,l.kt)("inlineCode",{parentName:"p"},"plugins")," section."),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre",className:"language-gradle",metastring:'title="build.gradle"',title:'"build.gradle"'},'id "net.linguica.maven-settings" version "0.5"\n'))),(0,l.kt)("h3",{id:"c-sync-gradle"},"c. Sync gradle"),(0,l.kt)("admonition",{type:"tip"},(0,l.kt)("p",{parentName:"admonition"},"If you use ",(0,l.kt)("strong",{parentName:"p"},"ProGuard")," in your project you should include these rules:"),(0,l.kt)("pre",{parentName:"admonition"},(0,l.kt)("code",{parentName:"pre"},"-keep class ch.globalpass.globalpasssdk.domain.model.** { *;}\n-keep class ch.globalpass.globalpasssdk.data.networkmodels.** {*;}\n\n-keep class org.jmrtd.** {*;}\n-keep class net.sf.scuba.** {*;}\n-keep class org.bouncycastle.** {*;}\n-keep class org.spongycastle.** {*;}\n-keep class org.ejbca.** {*;}\n\n-dontwarn javax.annotation.Nullable\n-dontwarn com.facetec.sdk.**\n-keep class com.facetec.sdk.**\n{ *; }\n"))),(0,l.kt)("h2",{id:"2-kyc"},"2. KYC"),(0,l.kt)("h3",{id:"a-initialize-sdk-in-oncreate-activity-or-in-oncreateview-fragment"},"a. Initialize SDK in onCreate() Activity or in onCreateView() Fragment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"private val globalPassSdk = GlobalPassSDK.create(this)\n")),(0,l.kt)("h3",{id:"b-start-kyc-flow-by-calling-start-function"},"b. Start KYC flow by calling ",(0,l.kt)("inlineCode",{parentName:"h3"},"start()")," function:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"start()")," function requires 3 parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"Screening token to start KYC flow.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"activity"),(0,l.kt)("td",{parentName:"tr",align:null},"Activity to open after screening is completed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"environment"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify one of the environments: ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassEnvironment.Prod")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassEnvironment.Dev"),".")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'globalPassSdk.start(\n  token = "<screeningToken>",\n  activity = MainActivity::class.java,\n  environment = GlobalPassEnvironment.Dev\n)\n')),(0,l.kt)("h2",{id:"3-instant-biometrics"},"3. Instant Biometrics"),(0,l.kt)("h3",{id:"a-initialize-sdk-in-oncreate-activity-or-in-oncreateview-fragment-1"},"a. Initialize SDK in onCreate() Activity or in onCreateView() Fragment:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},"private val globalPassSdk = GlobalPassSDK.create(this)\n")),(0,l.kt)("h3",{id:"b-start-instant-biometrics-flow-by-calling-start-function"},"b. Start Instant Biometrics flow by calling ",(0,l.kt)("inlineCode",{parentName:"h3"},"start()")," function:"),(0,l.kt)("p",null,"There is overloaded ",(0,l.kt)("inlineCode",{parentName:"p"},"start()")," function that requires 4 parameters:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"token"),(0,l.kt)("td",{parentName:"tr",align:null},"Instant Biometrics token to start ",(0,l.kt)("em",{parentName:"td"},"Instant Biometrics")," flow.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"activity"),(0,l.kt)("td",{parentName:"tr",align:null},"Activity to open after screening is completed.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"environment"),(0,l.kt)("td",{parentName:"tr",align:null},"Depending on the implementation use ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassEnvironment.Prod")," or ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassEnvironment.Dev")," API.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"flow"),(0,l.kt)("td",{parentName:"tr",align:null},"This value is set as ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassFlow.KYC")," by default. Set this value to ",(0,l.kt)("inlineCode",{parentName:"td"},"GlobalPassFlow.InstantBiometrics")," for ",(0,l.kt)("em",{parentName:"td"},"Instant Biometrics")," flow.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'globalPassSdk.start(\n  token = "<instantBiometricsId>",\n  activity = MainActivity::class.java,\n  environment = GlobalPassEnvironment.Dev,\n  flow: GlobalPassFlow = GlobalPassFlow.InstantBiometrics\n)\n')),(0,l.kt)("h2",{id:"4-additional-optional-parameters-in-start-function"},"4. Additional optional parameters in ",(0,l.kt)("inlineCode",{parentName:"h2"},"start()")," function:"),(0,l.kt)("p",null,"There are additional optional parameters in ",(0,l.kt)("inlineCode",{parentName:"p"},"start()")," function:"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Parameter"),(0,l.kt)("th",{parentName:"tr",align:null},"Description"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"enableFileLogger"),(0,l.kt)("td",{parentName:"tr",align:null},"Enable Logger to write SDK logs.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"widgetMode"),(0,l.kt)("td",{parentName:"tr",align:null},"Select matching widget mode if ",(0,l.kt)("inlineCode",{parentName:"td"},"Split")," flow is used.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"externalId"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify your internal customer identifier to be set on the screening.")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},"languageCode"),(0,l.kt)("td",{parentName:"tr",align:null},"Specify SDK language using available langauage options.")))),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'globalPassSdk.start(\n    // ...\n    enableFileLogger = true,\n    widgetMode: WidgetMode = WidgetMode.FULL_MODE,\n    externalId: String? = null,\n    languageCode: String = "en"\n)\n')),(0,l.kt)("h3",{id:"enablefilelogger"},(0,l.kt)("inlineCode",{parentName:"h3"},"enableFileLogger")),(0,l.kt)("p",null,"There is an optional Logger that writes logs into file which could be found in Internal Storage:"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"File Storage \u2192 Android \u2192 data \u2192 \u201cyour app package\u201d \u2192 files \u2192 logs \u2192 logs file")),(0,l.kt)("p",null,"It is optional and ",(0,l.kt)("inlineCode",{parentName:"p"},"false")," by default. To enable the logger you need to set it to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),"."),(0,l.kt)("h3",{id:"widgetmode"},(0,l.kt)("inlineCode",{parentName:"h3"},"widgetMode")),(0,l.kt)("p",null,"To use ",(0,l.kt)("strong",{parentName:"p"},"Split")," flow, matching widgetMode must be selected. By default it is set to ",(0,l.kt)("inlineCode",{parentName:"p"},"FULL_MODE"),". To select mode you can use sealed class WidgetMode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-kotlin"},'enum class WidgetMode(val value: String?) {\n     SPLIT_IDENTITY_MODE(value = "Identity"),\n    SPLIT_ADDRESS_MODE(value = "Address"),\n    FULL_MODE(value = null)\n}\n')),(0,l.kt)("h3",{id:"externalid"},(0,l.kt)("inlineCode",{parentName:"h3"},"externalId")),(0,l.kt)("p",null,"You can provide your own customer ID to be assigned to the screening flow. By default value is ",(0,l.kt)("inlineCode",{parentName:"p"},"null"),"."),(0,l.kt)("h3",{id:"languagecode"},(0,l.kt)("inlineCode",{parentName:"h3"},"languageCode")),(0,l.kt)("p",null,"By default, the SDK is displayed in English. To specify a different SDK display language, you can provide the locale code here."),(0,l.kt)("p",null,"Available locales:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"English (",(0,l.kt)("inlineCode",{parentName:"li"},"en"),")"),(0,l.kt)("li",{parentName:"ul"},"German (",(0,l.kt)("inlineCode",{parentName:"li"},"de"),")"),(0,l.kt)("li",{parentName:"ul"},"Russian (",(0,l.kt)("inlineCode",{parentName:"li"},"ru"),")"),(0,l.kt)("li",{parentName:"ul"},"Chinese Simplified (",(0,l.kt)("inlineCode",{parentName:"li"},"zh-CN"),")"),(0,l.kt)("li",{parentName:"ul"},"Lithuanian (",(0,l.kt)("inlineCode",{parentName:"li"},"lt"),")")),(0,l.kt)("admonition",{type:"note"},(0,l.kt)("p",{parentName:"admonition"},"If an unsupported locale will be provided, the SDK will fallback to English.")))}m.isMDXComponent=!0}}]);